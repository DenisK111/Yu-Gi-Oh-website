@using Microsoft.AspNetCore.Identity
@using Yu_Gi_Oh_website.Common.Settings
@using Yu_Gi_Oh_website.Data.Data.Seeding.Common
@model ThreadViewModel

@section Styles{

	
	<link href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css" rel="stylesheet">
}

	<div>
		 

		<h1 class="text-center">@Model.Subject</h1>	
		

		<div class="d-flex justify-content-between">
			<div>Created On: @Model.CreatedOn </div>
			<div class="row">
				<div class="col text-center p-2">
					<form method="get" asp-area="Forum" asp-controller="Post" asp-action="AddPost" asp-route-id="@Model.Id" id="form1">
					</form>
					<button type="submit" form="form1" value="Submit" class="btn btn-danger rounded-0">Add New Post</button>
				</div>
			</div>
			<div class="d-inline-block ms">Last Post On: @Model.ModifiedOn</div>
			
		</div>		

		<row>
			@{
			var id = 1;
		}<form id="votesForm" method="post"></form>
		@foreach (var post in Model.Posts)
		{

			<div id="I@(id)"class="row">
				<span class="visually-hidden">@post.IsVoted</span>
				<span class="visually-hidden">@post.IsUpvote</span>
				<div class="col-md-12 rounded-0">
					<div class="card mb-4 rounded-0">
						<div class="card-header rounded-0">
							<div class="media d-inline-flex w-100 align-items-center">
								<img src="@(post.ProfilePic ?? "https://media.istockphoto.com/id/1147544807/vector/thumbnail-image-vector-graphic.jpg?s=612x612&w=0&k=20&c=rnCKVbdxqkjlcs3xH87-9gocETqpspHFXu5dIGB4wuM=")" class="d-block ui-w-40 rounded-circle" style="width:80px" alt="">
								<div class="media-body ms-3">
									<a href="javascript:void(0)" data-abc="true">@post.Author</a>
									<div class="text-muted small"><span class="text-danger">Posted on: </span><strong>@post.CreatedOn</strong></div>
								</div>
								<div class="text-muted ms-auto small">
									<div><span class="text-info">Member since</span> <strong>@post.AuthorCreatedOn</strong></div>
									<div><span class="text-info">Posts: </span><strong>@post.AuthorPostsCount</strong></div>
								</div>
							</div>
						</div>
						<div class="card-body bg-white text-black">
							@Html.Raw(post.SanitizedContent)
						</div>
						<div class="card-footer rounded-0 d-flex px-0 pt-0 pb-1">
							<div class="px-1"><a href="javascript:void(0)" onclick="sendPostVote(@post.Id, true,@id)"> <ion-icon name="thumbs-up-outline" id="thumbsUp" class="icon-1x"></ion-icon> </a><span id="@id" class="d-inline-block text-lg-end">@post.Likes</span> </div>
							<div class="px-1"> <a href="javascript:void(0)" onclick="sendPostVote(@post.Id, false,@id)"><ion-icon name="thumbs-down-outline" id="thumbsDown" class="icon-1x"></ion-icon> </a><span id="@(id * -1)" class="d-inline-block text-lg-start">@post.Dislikes</span> </div>
							@if (this.User.IsInRole(Roles.Admin) || this.User.IsInRole(Roles.Moderator))
							{
								<div class="ms-auto">
									<form method="post" asp-area="Forum" asp-controller="Post" asp-action="RemovePost" id="form2">
										<input type="hidden" value="@Model.Id" name="threadId" />
										<input type="hidden" value="@post.Id" name="postId" />
									</form>
									<button class="btn btn-success rounded-0" form="form2" type="submit" value="Submit">
										Remove Post
									</button>
								</div>
							}

						</div>
						
						
					</div>
				</div>
			</div>

			id += 1;
		}

	</row>

</div>
<div class="col text-center p-2">
	<form method="get" asp-area="Forum" asp-controller="Post" asp-action="AddPost" asp-route-id="@Model.Id" id="form1">
	</form>
	<button type="submit" form="form1" value="Submit" class="btn btn-danger rounded-0">Add New Post</button>
</div>



<partial name="_PagingPartial" for=Paging />

@section Scripts{
	<script type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"></script>
	<script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"></script>
	<script>function toast() { toastr.warning('My name is Inigo Montoya. You killed my father, prepare to die!') } ()</script>
	<script>

		function renderIcon(i){
			let dataArr = [];

			let data = document.querySelectorAll(`#I${i} .visually-hidden`);			
			data.forEach(x => dataArr.push(x.textContent))
			if (dataArr[0] == 'True') {				
				if (dataArr[1] == 'True') {
					let icon = document.querySelector(`#I${i} #thumbsUp`);
					icon.setAttribute('name', 'thumbs-up');												
				} else {									
					let icon = document.querySelector(`#I${i} #thumbsDown`);
					icon.setAttribute('name', 'thumbs-down');
				}
			}
		}

		for(i=1;i<@id;i++){
			renderIcon(i);
		}

		async function sendPostVote(id, isUpvote, elementId) {
			const token = $("#votesForm input[name=__RequestVerificationToken]").val();
			const response = await fetch('/api/vote', {
				method: 'POST',
				credentials: 'include',
				mode: 'same-origin',
				headers: {
					'Content-Type': 'application/json',
					'@(AntiforgerySettings.HeaderName)': token,
				},
				body: JSON.stringify({ id, isUpvote }),
				redirect: 'follow'
			})

			if(response.redirected){
				alert('Please log in before voting on posts!')
			}

			const resultObj = await response.json();
			const result = resultObj.result;

			let element = isUpvote ? document.getElementById(`${elementId}`) : document.getElementById(`${elementId * -1}`)
			let otherElement = !isUpvote ? document.getElementById(`${elementId}`) : document.getElementById(`${elementId * -1}`)

			if (result === 1) {
				element.textContent = Number(element.textContent) + 1;
				if(isUpvote){
					let icon = document.querySelector(`#I${elementId} #thumbsUp`);
					icon.setAttribute('name', 'thumbs-up');			
				} else {
					let icon = document.querySelector(`#I${elementId} #thumbsDown`);
					icon.setAttribute('name', 'thumbs-down');
				}

			} else if (result === 2) {
				let icon1 = document.querySelector(`#I${elementId} #thumbsUp`);
				let icon2 = document.querySelector(`#I${elementId} #thumbsDown`);
				if(isUpvote){					
					icon1.setAttribute('name', 'thumbs-up');			
					icon2.setAttribute('name', 'thumbs-down-outline');			
				} else {
					icon1.setAttribute('name', 'thumbs-up-outline');
					icon2.setAttribute('name', 'thumbs-down');
				}
				element.textContent = Number(element.textContent) + 1;
				otherElement.textContent = Number(otherElement.textContent) - 1
			} else if (result === -1) {
				if (isUpvote) {
					let icon = document.querySelector(`#I${elementId} #thumbsUp`);
					icon.setAttribute('name', 'thumbs-up-outline');
				} else {
					let icon = document.querySelector(`#I${elementId} #thumbsDown`);
					icon.setAttribute('name', 'thumbs-down-outline');
				}

				element.textContent = Number(element.textContent) - 1;
			}
		}

	</script>

}
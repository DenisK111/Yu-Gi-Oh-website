@model PageViewModel

@{
    var url = Context.Request.PathBase + Context.Request.Path + Context.Request.QueryString;
    Model.Url = url;   

}

<nav aria-label="Card Pages">
    <ul class="pagination justify-content-center position-relative py-3 text-center">
        @if (this.Model.CurrentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" href="@Model.Url.Replace($"page={Model.CurrentPage}",$"page={Model.PreviousPage}",true,null)" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        }
        @{
            const int MorePagesToShow = 3;
            var pagesToShow = new List<int>();
            for (var i = 1; i <= MorePagesToShow; i++)
            {
                pagesToShow.Add(i);
            }
            for (var i = this.Model.CurrentPage - MorePagesToShow; i <= this.Model.CurrentPage + MorePagesToShow; i++)
            {
                if (i > 0)
                {
                    pagesToShow.Add(i);
                }
            }
            for (var i = this.Model.PagesCount - MorePagesToShow + 1; i <= this.Model.PagesCount; i++)
            {
                if (i > 0)
                {
                    pagesToShow.Add(i);
                }
            }
            pagesToShow = pagesToShow.Where(x => x <= this.Model.PagesCount).Distinct().OrderBy(x => x).ToList();
        }
        @for (var i = 0; i < pagesToShow.Count; i++)
        {
            var className = string.Empty;
            var pageNumber = pagesToShow[i];
            if (pageNumber == this.Model.CurrentPage)
            {
                className = "active";
            }
            if (i > 0 && pageNumber - 1 != pagesToShow[i - 1])
            {
                <li class="page-item @className"><a class="page-link bg-primary" href="@Model.Url.Replace($"page={Model.CurrentPage}",$"Page={pagesToShow[i - 1] + 1}",true,null)">...</a></li>
            }
            <li class="page-item @className"><a class="page-link " href="@Model.Url.Replace($"page={Model.CurrentPage}",$"Page={pageNumber}",true,null)">@pageNumber</a></li>
        }
        @if (this.Model.CurrentPage < this.Model.PagesCount)
        {
            <li class="page-item">
                <a class="page-link" href="@Model.Url.Replace($"page={Model.CurrentPage}",$"Page={Model.NextPage}",true,null)" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        }
    </ul>
</nav>

